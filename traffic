#!/bin/bash

if [[ -z "$ip" ]]; then
	ip="4"
fi

if [[ "$ip" -eq "4" ]]; then
	bin=iptables
elif [[ "$ip" -eq "6" ]]; then
	bin=ip6tables
else
	echo "Error: env.ip must be either 4 or 6"
fi

if [[ "$1" == "config" ]]; then
	echo "graph_title Traffic over IPv$ip
graph_vlabel bytes/s
graph_category network
graph_args -l 0"
	if [[ -z $ports ]]; then
		echo "in.label incoming
in.type DERIVE
in.min 0
in2.label in test
in2.type DERIVE
in2.min 0
in2.cdef in2,8,*
out.label outgoing
out.type DERIVE
out.min 0
out2.label out test
out2.type DERIVE
out2.min 0
out2.cdef out2,8,*
total.label total
total.type DERIVE
total.min 0"
	else
		for port in $ports; do
			name="port_${port}"
			echo "${name}_in.label ${port} (incoming)
${name}_in.type DERIVE
${name}_in.min 0
${name}_out.label ${port} (outgoing)
${name}_out.type DERIVE
${name}_out.min 0
${name}_total.label ${port} (total)
${name}_total.type DERIVE
${name}_total.min 0"
		done
	fi

	exit
fi

iptables=$(which $bin)
if [[ -z "$chain_in" ]]; then
	chain_in="COUNT_IN"
fi
if [[ -z "$chain_out" ]]; then
	chain_out="COUNT_OUT"
fi

if [[ -z $ports ]]; then
	value_in=$($iptables -L INPUT -v -x -n | grep "$chain_in" | awk '{print $2}')
	echo in.value $value_in
	echo in2.value $value_in
	value_out=$($iptables -L OUTPUT -v -x | grep "$chain_out" | awk '{print $2}')
	echo out.value $value_out
	echo out2.value $value_out

	value_total=$((value_in+value_out))
	echo total.value ${value_total}
else
	for port in $ports; do
		value_in=$($iptables -L $chain_in -n -v -x | grep "tcp dpt:${port} *$" | awk '{print $2}')
		echo port_${port}_in.value ${value_in}
		value_out=$($iptables -L $chain_out -n -v -x | grep "tcp spt:${port} *$" | awk '{print $2}')
		echo port_${port}_out.value ${value_out}

		value_total=$((value_in+value_out))
		echo port_${port}_total.value ${value_total}
	done
fi
